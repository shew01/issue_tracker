<File version="2">
  <FileID>66948ff2-3495-4dfe-a96b-fca61e2c524d</FileID>
  <Preview>iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAAAXNSR0IArs4c6QAAAARnQU1BAACx
jwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAACsvSURBVHhe7d13cJR3nufxqdrZvX92Zvbqau6v
3bvduz9u6mrr6nY21O7VztXVjj07M85mxjbJJpskTBBBQuQoQAiRk7HIQkjkjEySCEICIUAJSa3Q
auXcSkiIz/1+DwgL3GZsIxjE835NvUeo9XSSefr3fVqt5gcAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB/fB988NG2kOkzUoKnhBAREVEvb9r06SnDh49MebjMf7NJ
wdMy2yQ1mP+rbyUiIqLeXKdZ0+P2n9TDZf6b2WnBLv6VDVJFPREREfXmWu5Lu2MPf7sBwE4M9kzl
dURERNSba+6Udu05xABARETkphgAiIiIerCyWqmmSaprMTX/gcw2dlt7vm+1vanebGd/HF/V+ODP
gbZ5rIfbPHk7e2QAqDQ3wt6Qb8p+/cnzEBERvYpV+6VLacU6eDpdR8/efmp2m0tpXpXWdOrYuQwd
OXMr4HbdO5iQrvySZt3KrdXBUzcCbtO9w1/eVMLFHJWZ29Z9De+RAcDjrVOOp1x3PBXKK65VrrdN
d4qblWvKM3/2+JrMdve/dj6iVyE74DoTtqnKTOV2Jwu03XfNXq6d8gN9zcnsi7XmOqu/54BdZR6k
vst5ne1Ngb5GRF9lj+hjDyc7Q8DtvBrdzA2c/dqVGyXaeyzVrJl+7TxwSVkF1QG37SqnqEb7T15X
yq1Ss6jf0YkLWeY8gbf9qmptj09ScWV7zw0A9s+lNfeUci1dWXklyvb4dDnxhFLjP1TaocFK2T9I
F7a/rfMno1VWfz/g8EDUW3Oe5jP7RGV5tZKSs5R0rUB5lWah7IG/53ZfKfI1qqiyM/B+Y06raezQ
9bRc3fS0qOI7DgEVZrAoKmmQp/Le04eMh9ltcrKLdCO3QeXfc+Agckt2UD5wMk0Fpa2qbX7weaDs
14or7upQwk2zsDeao/Vbzq/at5iF+b6+nj3IaLwrJaYUKPV2mc5eyVNadqUazXnuma+bszmXa7ez
25tNnWfh7UCy/8R1FZnr6v548swDgK+qQ+mZHtWYCzInKfXSAfnOvKf7FbvV6V2mgqP/qlN75zsP
GgEfyIh6aVVmpyrISVPYpGEaFjRBg4ZM1ZbTec4OWml2QvvR7piVZlv7rEDNw523wXwsN8ODXYRr
zANAvTmtxi6qZv9osOcxNd1t1/oZI7T+yxp1mP3K+fmdOU/XdfvN/nZu23K91Westp/xqMperrku
e956s60dTuxQYB9g7OU7R/pd5zfX09Rap4l9XlO/aftUbS7fuY3m9LqHl/HY7Wl/8HPG49s2a93e
NJWbxwH7IOPcF/PnOvN9qDTb2vts7489j93eXpe939XmNOd2mdMqHp5mv3fdT+u6X0SvQnb/sANA
rrfpqQO2/ZrH1/JoALBP1Teb/eLkmRQtW7FR8xZFOS1cskrLV25WTmGd/Obr55LzHw0A17MqzeXc
19LIjYpa84X8Zn/1Vt5VeMRafb4t3tkn7dq77/i1nh8A7JH91YuXdTl2ty7t26+zBzep6MwHZjJY
KuUN0p29f6NDMUtUYb4hDAD0ymT+LjebGXtr6BD1Cz3qTNsNZtHML65XpX1WoLRMh46e1/FLhaow
i1xtY6duXL2hA0cu6Fx6rbMol5TWK8tTonPmgeJa4T35W9p1NiFRB45dVm5lk9aHDdHyPdd05suL
Sslvc3Zke932RwOlnusa8vp7Grf8tArNvtVirvNS4kXtM5d/MbdVTWYh9/pqlZlforPm8tOK2h69
FqfGPEBknY3R8I8/0tt9J+p0fqczlDSYy0+5ctW5/pve+2o0jzRfJiTpwKmbyq80RyqlDSqquu8M
FeW+Uh029+/k5QJlFtWpyEwRRd5q5eSX6uSxRF3ManQW/jpzuwpycrTf3K7E27XOMyb26KQoL9ec
dl7n06uc0yq6DTdEvb0nB4AnXxdns6cHGgCsQUNH20VZP/3PP9VPf/pT/ehHP3Y+P3sxXWb3fXwA
yKww+/t9hc2a72wzdfpc/e6DAc6ft+6Mcwbt5zYAlJsHmosbVurGm/+gC//+fxQ/Z4wyDvyd7qX8
XPcu/ielrf+B4raHO0cHDAD0KlVnDs2T90Tot28O0s4r5c7Tdnb6rvLmK2LuTE1ZFKmgQRMUcTRP
9RUFWjZntuYtW64+/ccq9laN8i9sU783X9PQoM06a3bmXYun6/3BkzV54hhFX/Bp05SP9M4A8/ln
o/Sb/tN0pbxTdWY/soPA7Quxev3v/6/eHLpQl70dSlgXrj4fj9HM2aF645NgJeQ2KfPkOn3w1m/0
qbn80xn1zjMQdnBp7ejQxrlhiohP145FoVq4O0NmN9bV+K0aOCxYoROnavP5Ozq0NlL9Pp2h4KDZ
OpTVok3zhyjiZIVaK+4obGxfDZ48W5NHDtHP3hquC6XmAWbRMP22zyhNmzhJr787Ugk+s89nXVPI
1OlavDxCwwfP0N7bjarMv6mwaeZ6l0dqxKBQbb9S6rwrGc8E0KvSkwOAXfuezG73TQPAgE+G63//
3T86f7auZxQ/HABuOk/rdx8AUjPKnaf4rdXrtzvb/dmf/QedOnvVOTBxng001/dcBgBzeTq9OlI5
Qz/QlXfeUsy8YB3d/CsdjvoHHYr6e22d+790bP9GngGgVy/z97neHGqfilul9371G70zeZMKGu7r
yzWh+rffjNPukwlaFTJYr/ebrTyz+PqKPDp6PEETB76voWvTlHdpqz7qH6wcs5MWJm7TO29M0HWz
I5t9UlX+Ni0b864mbLQPCPcU1neoVp0odZ7mt0/Vd5jjgNXj5mlbcqtq8xM18O3JumCfyzcORc7W
+MXndTVhvfoNma1cM6g0m+u3DwSV5vKr8m9pQtAEnTP3oSJltz6Zslk15ny7Zk7UB2PWyxzs6157
lcJ+/5EmrU9yHnDq/Z1aOXOgVp2v0LXdazR8XLTzI7+WOxf02u/7KaH4vmLmDNTQBafMqVLEp2MU
eTBd64IH653hETr25WlN+eiXGhWxT+tDg/TWoEU6kpCgsI9/pQ9DdqvCDE72xwhf+x4T9cK6BgBf
zX0lp+Xpv/71f/taM2aHq93s7IEGgI8Hf6q//Ku/1uGTp3Xo+GlFRG166gBgf9RYWtOoPubI/yd/
8R/1k5/8hSYET1eDOSqxzzY8twHA/uzx5Oeb9PnP/oui/uYvtWPlWm1OKtPq4/mKPJClxOQs3biZ
LV/V468+JOrt2QW11uwTZm1VU1WBJo3orylLD2pl8Kf6t49naPmqKIVHblRc0m1dTzqkoAFjFLpk
lcYPGqDRm9KUlfiFJk5fo1Izpp9cPkPvTIiX2UWcn9e33uvQ6mmfaG2CuSI1af7goZofk+v8fL3c
HDW0tNVryafTtfFsrTIOrtW/f7xO5oDb2aGvH9qmyZP36vSJjZoyb6uKm81++nDfqzML7dXYhfqf
/+NfNWTCJAUNG6Cf/e2vFWumkKaKHEWFDdab78/Q0Vv1Kr55VtNGfKiPhkYpvaJDG+YP1Yazhdo3
N0zjIpPNrTK3s6JYE0JCdCyvU3FLR2lJvMecKq2ZOFGLV8ZqVJ/fqd+0FVoaEaWlaz7XldTrGvvu
u/r9pAgts6et3KxDV3zO6xV4BoBelboGgFLzGHExJVs//OEPv9a4CSHOsP/kAHDfPB4ET52tP//z
H+lP/uSHTn/6p3+qH//4J0q6mq028/XuA0BaVqXqzY7f5/f99ec/+rFOn7+mtZt2OuebPnOR/OYA
wD7T8HxeA1DXqavJ15R0JlHnTyfocMIlhe2rVdh+6f1FebpwNVN38opVUvn4FRP19moaOsx0f0c3
PB3OC/VOr5qigUGbtHfzCg0Ytc45km6xT7vX+LVr1iT1Dz5q10aFj/xIn0RdUeaFTRozaZkKzJmz
v9ytt/99uE4Vd6i2tkY5vgatnNRXkcfspfg1s98Azd391QDQ2lanhYMna/WpClXkXtTvX+ur3emN
umceUraY65q95bZSTqxQ0PQNKrBH/XbfM/lbm7TQLOrjVp5W+u1spWXkKnxifw2ZFa875tHKPhOw
PWyABk/boIyyVnN9bQrr/yvN35utzQsGaeWZMl2Onqdf910oc7flvbhHP//NBzrjlfYsHKK5O7Od
+7hi9HDN3JyktVPHafyKJOepyKqqNlXUNGld8EiNXpTg/CyzxhxB5JsJ5bv+FgPRy1zXAJBX0mwO
FO4pK7/6axX4mp2j8ycHAPsaGfu1TLNNRl6VMh9mz+Orvuf8uKz7AHAts8K5nGu3ipRdUOv8GNJu
Y89zI9MM12a/tz2XAcBX3aHr6VkqKPMrIydPpxKva+D88/r9zGS9Mf6EEi6k6ubtLAYAeuXyt3fo
8NYV+l2fYRo5crT69pulo7lNamqqUtSkgXpn0Gj1GzxBu5Jq5E07q+H9+2rY2JkaOWKCZu3J1p2r
8ZoTHq0882DhNwvtvqgQvfX+MA3+ZKJiUyu1e3mIvjhXq3udzVoRPE2rjxSpvs1ctxkAmlobtS4k
QtFmQTYH+Lq0d4P69R2o4SNHaMz8rfKYB4T0E5s1J3Kv8yJBOwBUmg19WRc13NymhAKz85sF3J43
88w2fTJ6hjavX60PhgRpaPB8JablacPCMA0Y8ZmC5qzVrZJW7Vg1VRvPVqmlvkzLgkfow+FBmhQy
Ta8PGKXThdKxDTO0+pBHHeZB5YvZMxS+x6NK3x1NHvS2GYjM92L0fJ3LNQOOL0+hQ95VP3Na35Gz
ddIMLl2/NUD0KtR9ALB/ti+GfTJ7ul247a8KPjkAfNN57JG8XYfPX/U8NgDYF+ba89nsOmu3s9vb
07s+fz4vAjQfM+94dTMzX7eyPLqV6dH1m7m6lp6jG7fzdCsj3wwGxWYK4n0A6BXL/H2uqO1QXlGN
mbbNRG8O1u0OaF9tX+u/rzueamWbnbrUbGdfpFNS1qBMszI/+j16s0/Y/cL5s92xzXkLzGVlefwq
7fr6w+uy29kfOTy67kenmfOby7eDgddXZ25HjUrM57XmAeTR17vOY04vNQN7SU2n84DQdbr9c2lt
p0rN0bi9zbll95wXDJaWNyvbHHUUVpvb71xep3N59v6VmUP2jLwindq5RUMnLVJ6jbnOhq9uY9d1
V5vLqaprU7b5/tzxtTq3wf52QHX93QenlbQ4952n/+lVyi7gccdSzf5er9Ias89VBc5+LaewUfvN
sGAHgH0nrpv9MfC2XVU1duh0Uo7zRkBfXrqjyzdKzNoaeNtHmf3evjFRjw4AXdkpxslONCb7YNeV
c1rXAx7RK5bdHx79/e/299z+jn/XaV37jF047ed2wXVe8GbqvhDbz7ufx15G13m7/7mrJ0/rOu+j
yzRfe+zyu5322ILbdZqp6zLs6Y8+f3gZ9nO7ePvyszQveLSGfTpGnwxeqKNZ/ge/z28up/vt7XpR
n73srsvtut7u18XiT69adu07cT5Tuw9eUbw58n5adhv7bn5es1DvOnjZnJb6tW26t+/ENW2LTzIH
CvW6etOn7fsuOqcF2rarvUdTtPdYihn0Hz8Qf+YBwB6hEJG7su9b7qvuVJlZyJ33BTBH/oG2I3Jr
dsi1z4jZFwI+LbuN3dYO4nZ9DbTNk3Vt27UeB9rmyZzrMNt275kGgMq6DlXVtRORm6pvV3XDvYfx
GEAUMLOfVNWb/cP5+LQebvPoPN+mh/td15+/9vUn++o6uv+7PM80ANTW+9VQX2uqIyIiope8irp7
PTUANKneXGB9fT0RERG95DEAEBERuTAGACIiIhfGAEBEROTCGACIiIhcGAMAERH1aA0N9Wpr9utu
i8l+7A2Z22pv89fvS4NaWlp6ZU/elyd7YQOA/SYSEdGr2VeP9fWqqa3T1Wyvzt0q1IXbRb2iczcL
lZbre3Afuq1btbW1yszM1PXr13Xjxo1ekb2t2dnZj+5D13+bJ3thA0BdXZ0qKytVQUREr0yVlVXO
43vXY31LU6MyCso0bG2CVh26osgDvaPl+y9r5IazKq2slr/xwaLZ1NSkwsJCLVu2TLGxsYqJiek1
RUREqKysTH7/15/V6OqFDADN5pt4Pe2mki5dVeq1G0RE9IqUeDFZ6Tdvq7nZrgEPBoDr5kh6afxl
NVUWq6KksFdUXVqoeXsuq7C06rEBIDc3Vzt27FBVVZV8Pl+vqLy8XNu2bVNxcfEffwBoavLrakqa
Gv1NAgC8Omrr6pWSesM50LOP93YASMvzadHeSyrzFig/P/9blKd8T5EqqmpUU1MjX3GB8vLMaQG3
DVxevkclZvErLrLnDbzN0yosyNecmEsqKnt8ALC3wy6mXq834PkClWcq9pU796W6qkJFBXnOaYG2
fSxPgNO+R/ZZi+joaOc2vxQDgP0L0tDof/hXBgDwKrA/70+9lv5sA4CnWN78NH2+dK6mTw/TwcSb
ZiEvDLxtwApUXJCthGPHlZiSoUIzBATe7pvryQHADiIXj0QrLGy65kasV0qW1wwBgbf9Ko+KiotU
0ANDAAMAAOC5e/YBoEBlFbnatThMEyct0prFUzU5bIuyKypV++gIOl/e0kpVV9eoqqLMeWq7oqpK
FeVlKi2rMLehQS3VGZo/abI2H81QS6tfpd7C7/QsQk8NAIXmyP/miWgNHTZCy7d8oXmTh2tB1CGV
NzSrqrJcZfb2mvtV7iuWp8Dej2rn9jeU3dKm1Vt09lqOGSBKVWW2qXl437/VswfdYgAAADx3zzwA
eApVUZarNdNHK3RFrIp9ZfIWe5WTekqLQqdrxqKNSsst1OEtC5wj6vC1W3U+8ZyWz5qpiLVbtGtT
hILGfabNMbFaNnuugoLGauLECdrz5Q1zOUWBrzNAPTIAeApUXpanzXOmaenWBNX5G1VZVqL0yycV
OX+Owpeu1a4d6zTd3I/oI1eVnXZGS2eHavr0Wdq1a4Pe/pd/VlDUUXkyz2uxve8LNyjlTpGKCzyB
r+8bYgAAADx3PfEjAE+RV4XZF7V44sf64O2+WnXwlFaN76ffvvuh3njt3/TZ0nglntikMUP76bXf
fqRJE8br48HTtCZqpsYGhWjXob1aM2+uRvX/SGOmR2nr6hn6dPJ65ZSUqDDA9QWqZwaAQlV507Qo
JEyfH7ym0tIilZRVKvXgCvV5b7Q2rF6k93/5mvp/8oH+9bWhOpSYpHVzJmnA736t9weM0KCPR2rj
gdNaNaGv3njvwX0fNT9GxRVlKgh0fd8QAwAA4Ll79mcAPPLcydKNjBzVNLWr4HKMhn80RH1+9Vt9
tjBK61csUdTa1Vo4IUzL16/RqMHD9Om4KYrcckQHoxdr1qqTumduR13+Zc0JDtX20zkqSI1T0IQo
3TYL4AsdAOyPM8o92rpgquZtOKq61hZV+wp0ZMsShSyJ0/mYxfrlL/ppdfTnCl+0VGuXhWv6hAVa
s2KGPh46WhNnrtLla2c1+peva8yCKK2LWKiozw8qt8THAAAAeLk88wBQUKSy/Ntas2yqJs+K0IJJ
UzR7Y7x2rw/T1CkLtSBkrtZsilbIoBFasnqZ+vb5UAPHTNLclYeUmRan4CFDNWPRHE0fN17Dhk/T
1mPpykzcppHjIpXxwgeAfBV4y5R1Pk4jhw1SaPgSTQ0abIaWT/XZnD3Kun1cs4NGKXxlpOYtWKMN
C+fq0xFTFTl/nN4eMkZjBw/XzGW7tHNtqHPf500J05qdZ1VY5pUnwHV9UwwAAIDn7lkHgIICj3Jy
PdrzeaRZKD/RoKFmEd93WJk3EhW7bq1Wb4lXdnGpUs/GaWXUSq3bskdnE5OUdCVdviqfrhzbq6gV
UTp8IVkpl5OVejNHuZnXdfZcsnILCr71wtlTA4DNW1Kq9MRDWrlihTbs2KfrN28pKTFFxRWlSjt7
0NyPKB08n66SwgzFbl2tqJVrFHfqgpKO79eumATlezO1Z/VKc9/jdNtTrMLv+JsBDAAAgOfuWQeA
oqIi561rx0+crJDQUIWGTtX4oLE6eSpB9WbxqjSLpn36u7ikzHkzHvtK+hKzsHmLC5WXa3/f/sHp
Pm+xik1F9gVzBUUqKSn+bkfNPTgA2FftF3lLndtVWV7q3Eevt8jc3jwVmeHAnm5/S8G+ZqC8wtwn
83m5z9wnc1/K7dG+Ob3M3teKMmfxfyV+C8Df1PzwrwwA4FVQZx7jnxwA7DsBhsddUkN5kUqLC56a
r6hA5SVFam6ofayqshLzNU/A8zyPKkoKnAEg0DsBbt++XRUVFc6C2hsqLS11BoCX4p0Am80AcCX5
mjPptLS0EhHRK1KJOWpNvpr22FsBZxeVa/j6L7V47yUtiO0dzdtzUWM3n1N5Vc1jA4A9erfvq2+H
APtMQG9o69atWrFihfOWwH/8ZwDMDcjMytGlyynOWwITEdGr0cVLV5Wdk+s802sf7+2/pFdXV69c
b4Vuekp1y1PWK7K31eOrfPQvAXbPDgH2mQD744DekL2t9pmAJ+/Hk72QAcDm9zc6NTYSEdGrkj3C
tB+7P97bRbTZPN7bZwNa7MfekLmt9jZ3vx9d2WcCemOB7kv3XtgAQERERC9PL2QAaGhoUHNzMxER
Eb2gnvbzf9sLGQDq6uqcVyP2pp+hEBER9dYKCgqcXy8MtCZ39dwHgM7OTp06dUr/9E//pD59+uid
d94hIiKi59R7772n1157TcHBwc4a/OS63NVzHwDu37+vmJgY9e3b1xkE9u3bR0RERM+pw4cPa9Gi
RRoxYoTzXg1PrstdvZABYO/everfv7+OHz/u/JmIiIieTwcOHHAGgNGjRzMAEBERuSUGACIiIhfG
AEBEROTCGACIiIhcGAMAERGRC2MAICIicmEMAERERC6MAYCIiMiFMQAQERG5MAYAIiIiF8YAQERE
5MIYAIiIiFwYAwAREZELYwAgIiJyYQwARERELowBgIiIyIUxABAREbkwBgAiIiIXxgBARETkwhgA
iIiIXBgDABERkQtjACAiInJhDABEREQujAGAiIjIhTEAEBERuTAGACIiIhfGAEBEROTCGACIiIhc
GAMAERGRC2MAICIicmEMAERERC6MAYCIiMiFMQAQERG5MAYAIiIiF8YAQERE5MIYAIiIiFwYAwAR
EZELYwAgIiJyYQwARERELowBgIiIyIUxABAREbkwBgAiIiIXxgBARETkwhgAiIiIXBgDABERkQtj
ACAiInJhDABEREQujAGAiIjIhTEAEBERuTAGACIiIhfGAEBEROTCGACIiIhcGAMAERGRC2MAICIi
cmEMAERERC6MAYCIiMiFMQAQERG5MAYAIiIiF8YAQERE5MIYAIiIiFwYAwAREZELYwAgIiJyYQwA
RERELowBgIiIyIUxABAREbkwBgAiIiIXxgBARETkwhgAiIiIXBgDABERkQtjACAiInJhDABEREQu
jAGAiIjIhTEAEBERuTAGACIiIhfGAEBEROTCGACIiIhcGAMAERGRC2MAICIicmEMAERERC6MAYCI
iMiFMQAQERG5MAYAIiIiF8YAQERE5MIYAIiIiFwYAwAREZELYwAgIiJyYQwARERELowBgIiIyIUx
ABAREbkwBgAiIiIXxgBARETkwhgAiIiIXBgDABERkQtjACAiInJhDABEREQujAGAiIjIhTEAEBER
uTAGACIiIhfGAEBEROTCGACIiIhcGAMAERGRC2MAICIicmEMAERERC6MAYCIiMiFMQAQERG5MAYA
IiIiF8YAQERE5MIYAIiIiFwYAwAREZELYwAgIiJyYQwARERELowBgIiIyIUxABAREbkwBgAiIiIX
xgBARETkwhgAiIiIXBgDABERkQtjACAiInJhDABEREQujAGAiIjIhTEAEBERuTAGACIiIhfGAEBE
ROTCGACIiIhcGAMAERGRC2MAICIicmEMAERERC6MAYCIiMiFMQAQERG5MAYAIiIiF8YAQERE5MIY
AIiIiFwYAwAREZELYwAgIiJyYQwARERELowBgIiIyIUxABAREbkwBgAiIiIXxgBARETkwhgAiIiI
XBgDABERkQtjACAiInJhDABEREQujAGAiIjIhTEAEBERuTAGACIiIhfGAEBEROTCGACIiIhcGAMA
ERGRC2MAICIicmEMAERERC6MAYCIiMiFMQAQERG5MAYAIiIiF8YAQERE5MIYAIiIiFwYAwAREZEL
YwAgIiJyYQwARERELowBgIiIyIUxABAREbkwBgAiIiIXxgBARETkwhgAiIiIXBgDABERkQtjACAi
InJhDABEREQujAGAiIjIhTEAEBERuTAGACIiIhf2Ug0AsbGxGjRokC5cuKCjR48SERHRc+rUqVOK
jIz84w8Alh0Afv7zn2vq1KkaN24cERERPacmTpyoPn36aODAgc4a/OS63NVzHwBaWlqUm5uriIgI
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</Preview>
  <Object type="System.Windows.Forms.Form, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="formMain" children="Controls">
    <Property name="AcceptButton">
      <Reference name="buttonSearch" />
    </Property>
    <Property name="CancelButton">
      <Reference name="buttonExit" />
    </Property>
    <Property name="ClientSize">784, 362</Property>
    <Property name="Name">formMain</Property>
    <Property name="Text">Search for Assignee</Property>
    <Event name="Load">formMain_Load</Event>
    <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="buttonCreate" children="Controls">
      <Property name="Anchor">Top, Right</Property>
      <Property name="Location">697, 12</Property>
      <Property name="Name">buttonCreate</Property>
      <Property name="Size">75, 23</Property>
      <Property name="TabIndex">7</Property>
      <Property name="Text">Create</Property>
      <Property name="UseVisualStyleBackColor">True</Property>
      <Event name="Click">buttonCreate_Click</Event>
    </Object>
    <Object type="System.Windows.Forms.TextBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="textboxNumberOfRows_QTY" children="Controls">
      <Property name="Anchor">Bottom, Left</Property>
      <Property name="Location">120, 327</Property>
      <Property name="Name">textboxNumberOfRows_QTY</Property>
      <Property name="Size">100, 20</Property>
      <Property name="TabIndex">6</Property>
    </Object>
    <Object type="System.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="labelNumberOfRows" children="Controls">
      <Property name="Anchor">Bottom, Left</Property>
      <Property name="Location">13, 327</Property>
      <Property name="Name">labelNumberOfRows</Property>
      <Property name="Size">100, 23</Property>
      <Property name="TabIndex">5</Property>
      <Property name="Text">Number of Rows</Property>
    </Object>
    <Object type="System.Windows.Forms.TextBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="textboxSearch" children="Controls">
      <Property name="Anchor">Top, Left, Right</Property>
      <Property name="Location">13, 15</Property>
      <Property name="Name">textboxSearch</Property>
      <Property name="Size">597, 20</Property>
      <Property name="TabIndex">0</Property>
      <Event name="KeyDown">textboxSearch_KeyDown</Event>
    </Object>
    <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="buttonSearch" children="Controls">
      <Property name="Anchor">Top, Right</Property>
      <Property name="Location">616, 12</Property>
      <Property name="Name">buttonSearch</Property>
      <Property name="Size">75, 23</Property>
      <Property name="TabIndex">1</Property>
      <Property name="Text">&amp;Search</Property>
      <Property name="UseVisualStyleBackColor">True</Property>
      <Event name="Click">buttonSearch_Click</Event>
    </Object>
    <Object type="System.Windows.Forms.DataGridView, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="datagridviewResults" children="Controls">
      <Property name="AllowUserToAddRows">False</Property>
      <Property name="AllowUserToDeleteRows">False</Property>
      <Property name="Anchor">Top, Bottom, Left, Right</Property>
      <Property name="Location">12, 42</Property>
      <Property name="Name">datagridviewResults</Property>
      <Property name="ReadOnly">True</Property>
      <Property name="SelectionMode">FullRowSelect</Property>
      <Property name="Size">760, 279</Property>
      <Property name="TabIndex">2</Property>
      <Event name="ColumnHeaderMouseClick">datagridviewResults_ColumnHeaderMouseClick</Event>
      <Event name="DoubleClick">datagridviewResults_DoubleClick</Event>
    </Object>
    <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="buttonExit" children="Controls">
      <Property name="Anchor">Bottom, Right</Property>
      <Property name="DialogResult">Cancel</Property>
      <Property name="Location">697, 327</Property>
      <Property name="Name">buttonExit</Property>
      <Property name="Size">75, 23</Property>
      <Property name="TabIndex">4</Property>
      <Property name="Text">E&amp;xit</Property>
      <Property name="UseVisualStyleBackColor">True</Property>
      <Event name="Click">buttonExit_Click</Event>
    </Object>
  </Object>
  <Code><![CDATA[

#region Control Helper Functions
function Load-DataGridView
{
	<#
	.SYNOPSIS
		This functions helps you load items into a DataGridView.

	.DESCRIPTION
		Use this function to dynamically load items into the DataGridView control.

	.PARAMETER  DataGridView
		The ComboBox control you want to add items to.

	.PARAMETER  Item
		The object or objects you wish to load into the ComboBox's items collection.
	
	.PARAMETER  DataMember
		Sets the name of the list or table in the data source for which the DataGridView is displaying data.

	#>
	Param (
		[ValidateNotNull()]
		[Parameter(Mandatory=$true)]
		[System.Windows.Forms.DataGridView]$DataGridView,
		[ValidateNotNull()]
		[Parameter(Mandatory=$true)]
		$Item,
	    [Parameter(Mandatory=$false)]
		[string]$DataMember
	)
	$DataGridView.SuspendLayout()
	$DataGridView.DataMember = $DataMember
	
	if ($Item -is [System.ComponentModel.IListSource]`
	-or $Item -is [System.ComponentModel.IBindingList] -or $Item -is [System.ComponentModel.IBindingListView] )
	{
		$DataGridView.DataSource = $Item
	}
	else
	{
		$array = New-Object System.Collections.ArrayList
		
		if ($Item -is [System.Collections.IList])
		{
			$array.AddRange($Item)
		}
		else
		{	
			$array.Add($Item)	
		}
		$DataGridView.DataSource = $array
	}
	
	$DataGridView.ResumeLayout()
}

function ConvertTo-DataTable
{
	<#
		.SYNOPSIS
			Converts objects into a DataTable.
	
		.DESCRIPTION
			Converts objects into a DataTable, which are used for DataBinding.
	
		.PARAMETER  InputObject
			The input to convert into a DataTable.
	
		.PARAMETER  Table
			The DataTable you wish to load the input into.
	
		.PARAMETER RetainColumns
			This switch tells the function to keep the DataTable's existing columns.
		
		.PARAMETER FilterWMIProperties
			This switch removes WMI properties that start with an underline.
	
		.EXAMPLE
			$DataTable = ConvertTo-DataTable -InputObject (Get-Process)
	#>
	[OutputType([System.Data.DataTable])]
	param(
	[ValidateNotNull()]
	$InputObject, 
	[ValidateNotNull()]
	[System.Data.DataTable]$Table,
	[switch]$RetainColumns,
	[switch]$FilterWMIProperties)
	
	if($Table -eq $null)
	{
		$Table = New-Object System.Data.DataTable
	}

	if($InputObject-is [System.Data.DataTable])
	{
		$Table = $InputObject
	}
	else
	{
		if(-not $RetainColumns -or $Table.Columns.Count -eq 0)
		{
			#Clear out the Table Contents
			$Table.Clear()

			if($InputObject -eq $null){ return } #Empty Data
			
			$object = $null
			#find the first non null value
			foreach($item in $InputObject)
			{
				if($item -ne $null)
				{
					$object = $item
					break	
				}
			}

			if($object -eq $null) { return } #All null then empty
			
			#Get all the properties in order to create the columns
			foreach ($prop in $object.PSObject.Get_Properties())
			{
				if(-not $FilterWMIProperties -or -not $prop.Name.StartsWith('__'))#filter out WMI properties
				{
					#Get the type from the Definition string
					$type = $null
					
					if($prop.Value -ne $null)
					{
						try{ $type = $prop.Value.GetType() } catch {}
					}

					if($type -ne $null) # -and [System.Type]::GetTypeCode($type) -ne 'Object')
					{
		      			[void]$table.Columns.Add($prop.Name, $type) 
					}
					else #Type info not found
					{ 
						[void]$table.Columns.Add($prop.Name) 	
					}
				}
		    }
			
			if($object -is [System.Data.DataRow])
			{
				foreach($item in $InputObject)
				{	
					$Table.Rows.Add($item)
				}
				return  @(,$Table)
			}
		}
		else
		{
			$Table.Rows.Clear()	
		}
		
		foreach($item in $InputObject)
		{		
			$row = $table.NewRow()
			
			if($item)
			{
				foreach ($prop in $item.PSObject.Get_Properties())
				{
					if($table.Columns.Contains($prop.Name))
					{
						$row.Item($prop.Name) = $prop.Value
					}
				}
			}
			[void]$table.Rows.Add($row)
		}
	}

	return @(,$Table)	
}
#endregion

#region Search Function
function SearchGrid()
{
	$RowIndex = 0
	$ColumnIndex = 0
	$seachString = $textboxSearch.Text
	
	if($seachString -eq "")
	{
		return
	}
	
	if($datagridviewResults.SelectedCells.Count -ne 0)
	{
		$startCell = $datagridviewResults.SelectedCells[0];
		$RowIndex = $startCell.RowIndex
		$ColumnIndex = $startCell.ColumnIndex + 1
	}
	
	$columnCount = $datagridviewResults.ColumnCount
	$rowCount = $datagridviewResults.RowCount
	for(;$RowIndex -lt $rowCount; $RowIndex++)
	{
		$Row = $datagridviewResults.Rows[$RowIndex]
		
		for(;$ColumnIndex -lt $columnCount; $ColumnIndex++)
		{
			$cell = $Row.Cells[$ColumnIndex]
			
			if($cell.Value -ne $null -and $cell.Value.ToString().IndexOf($seachString, [StringComparison]::OrdinalIgnoreCase) -ne -1)
			{
				$datagridviewResults.CurrentCell = $cell
				return
			}
		}
		
		$ColumnIndex = 0
	}
	
	$datagridviewResults.CurrentCell = $null
	[void][System.Windows.Forms.MessageBox]::Show("The search has reached the end of the grid.","String not Found")
	
}
#endregion

$formMain_Load={
	#TODO: Initialize Form Controls here
	
#	# Set watermark text--see https://www.sapien.com/blog/2013/08/14/new-control-set-textbox-watermark/
#	
#	$WatermarkText_STR = 'Please enter search text here'
#	$textBoxSearch.ForeColor = 'LightGray'
#	$textBoxSearch.Text = $WatermarkText_STR

	<###############################################################
	#
	# Display non-Production environment notification
	#
	###############################################################>

	display_nonproduction_environment

	# Define SQL statement
	
	[string]$SQLCommand_STR = "
select
	assignee_cde,
	first_nme,
	last_nme,
	user_nme,
	email_adr
from
	assignee
order by
	assignee_cde;"
	
	if ($Debug_SW -eq 1)
	{
		Write-Host $SQLCommand_STR	
	}
	
	# Retrieve data from database
	
	$dt = Get-Datatable $DatabaseConnection_STR $Database_NME $SQLCommand_STR
	
	# Put data into datagridview
	
	$datagridviewResults.DataSource = $dt.Tables[0]
	
	# Set datagridview column attributes
	
	$datagridviewResults.Columns[0].HeaderText = "Assignee Code";
	$datagridviewResults.Columns[0].Width = 120;
	
	$datagridviewResults.Columns[1].HeaderText = "First Name";
	$datagridviewResults.Columns[1].Width = 140;
	
	$datagridviewResults.Columns[2].HeaderText = "Last Name";
	$datagridviewResults.Columns[2].Width = 140;
	
	$datagridviewResults.Columns[3].HeaderText = "Username";
	$datagridviewResults.Columns[3].Width = 140;
	
	$datagridviewResults.Columns[4].HeaderText = "Email Address";
	$datagridviewResults.Columns[4].Width = 180;
	
	# Display the row count
	
	$DataGridRowCount_QTY = $datagridviewResults.RowCount
	
	$textboxNumberOfRows_QTY.Text = "{0:N0}" -f $DataGridRowCount_QTY
}

$buttonExit_Click={
	#TODO: Place custom script here
	
	$formMain.Close()
}

$buttonSearch_Click={
	#TODO: Place custom script here
	
	SearchGrid
}

$buttonCreate_Click = {
	#TODO: Place custom script here
	
	$formMain.Hide()
	Call-ChildFormEditAssignee_psf "!CREATE!"
	$formMain.Close()
}

# For this code to work properly, be aware that:
#     1) The "SelectionMode" property needs to be set to "FullRowSelect"--see https://www.sapien.com/forums/viewtopic.php?t=9004
#     2) A Double Click [sic] event, not a Click event needs to be configured for the DataGridView

$datagridviewResults_ColumnHeaderMouseClick=[System.Windows.Forms.DataGridViewCellMouseEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.DataGridViewCellMouseEventArgs]
	if($datagridviewResults.DataSource -is [System.Data.DataTable])
	{
		$column = $datagridviewResults.Columns[$_.ColumnIndex]
		$direction = [System.ComponentModel.ListSortDirection]::Ascending
		
		if($column.HeaderCell.SortGlyphDirection -eq 'Descending')
		{
			$direction = [System.ComponentModel.ListSortDirection]::Descending
		}

		$datagridviewResults.Sort($datagridviewResults.Columns[$_.ColumnIndex], $direction)
	}
}

$textboxSearch_KeyDown=[System.Windows.Forms.KeyEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.KeyEventArgs]
	if($_.KeyCode -eq 'Enter' -and $buttonSearch.Enabled)
	{
		SearchGrid	
		$_.SuppressKeyPress = $true
	}
}

$datagridviewResults_DoubleClick={
	#TODO: Place custom script here
	
	# See https://www.sapien.com/forums/viewtopic.php?t=9004
	
	#	[void][System.Windows.Forms.MessageBox]::Show($datagridviewResults.SelectedCells[0].FormattedValue, 'You Chose')
	
	#	Write-Host $datagridviewResults.SelectedCells[0].FormattedValue
	
	$formMain.Hide()
	Call-ChildFormEditAssignee_psf $datagridviewResults.SelectedCells[0].FormattedValue
	$formMain.Close()
}
]]></Code>
  <Mode>0</Mode>
  <Assemblies>
    <Assembly>mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</Assembly>
    <Assembly>System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
  </Assemblies>
</File>