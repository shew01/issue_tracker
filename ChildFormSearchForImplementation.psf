<File version="2.1">
  <FileID>a32f21ab-9ddc-495f-93c2-865ec3aa7fba</FileID>
  <Preview>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
63zd0eK6c9E/cybdLl0+dy5dvvr56mWr2/albfOfLSwuW6u43dr+e4bzSyOzMbCwsnqfa9fn/X1+
+3z56v0WX6e+ev3q5cX9f3Y8+T5Wv8777Ev7+Ozyz7Zb3e+Vx1w8rrnltWNP9/PZ41i9bnW71fv/
8uXF81rs54vXX7mPK/e/ejyfb3flWK4cgyTp1pa/z+ZXwPNL6J15UU2L87epPS30B1uGYn/jQLTl
Bf2z6+bTyeKxdOKXTvLWKj5PZ/b5uiu368wLfcdoVNT3p5PDdOKXjqE9LezF9kPpBHD8VLFdR7qf
7rF0Mjh2svi8Pd93Kg8KdV3jUd89kU7S8zp1LgZnTl3fALB4PtLinhelvOjkRehrytddo/ynhK91
+c2VF+eV9GBWVj+/5m0kSboFzS6ns+rZdBY9EbVd+Xfur7+azvF05p8W4rRY5+3ruj+/ri6Xvv5C
a9d93kQ09s4UA8KN3P9qE3F44lQMppPU/Mb+kbkz1zcALF1IA0DaaHRhOZZOnotFSZJK1rEzK3H8
Bjt2Ord8zeuup3zfS6dubPu87Ykz52Ph5HIxAAwvXkwDwNnrHwCOpulnfHE5Vs6djWVJknTXlNfu
M2fO3twAcO7s2TgrSZLumvLafeq0AUCSpFJlAJAkqYQZACRJugUtLy/fsV3reL/TAWB5+dzaneeP
kiT9UEpr37lzn613+fNjx47F/Pz8HVc+rquP9bNjTn0nA0B+ghYWl2JsfDImp2YkSfrBlNe2Y8eO
x/JVC2tvb28cPXo0BgYG7pjy8eTj+l4HgJU0HU1MTKU7XYmPP/5YkqQfTCdOno7p6Zlirctr3pkz
Z4rFdnZ29rqam5uLpaWldIY+d83rr1XeJp/RX+u631U+ri+v0bnvdACYSlPSpUuXAwB+SM4tr8TM
zOxXBoDp6elvbGY2LeSzU9Hc3BSDI+Mxnxb26ZmZz6+/+vOrLpuanIixsfEvXH893bYB4OLFS2tP
FwD8MJw9t3yDA8BsLM1NxnNPPRJvbtkW61/ZEMPTizE7PRVzC4uxMD8XE5OTsbC4GIsLC8U2C+ms
f3p2IbobK+Ohx16M46dOF68cTE1da/9fzQAAALfIjQ8AM3F8cTaefez+ePiJJ2NnxaGoP7Q3Hnzg
wXjq2ZfiwL698fBD98dbWz+I1199Ol59893YuP75WPfCunj2qYfj//zZz+Lxp56Nhq6jsZiGgK/u
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</Preview>
  <Object type="System.Windows.Forms.Form, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="formMain" children="Controls">
    <Property name="AutoScaleDimensions">10, 20</Property>
    <Property name="AutoScaleMode">Font</Property>
    <Property name="CancelButton">
      <Reference name="buttonExit" />
    </Property>
    <Property name="ClientSize">1590, 557</Property>
    <Property name="Margin">8, 8, 8, 8</Property>
    <Property name="Name">formMain</Property>
    <Property name="Text">Update Implementation Queue Order</Property>
    <Event name="Load">formMain_Load</Event>
    <Object type="System.Windows.Forms.TextBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="textboxNumberOfRows_QTY" children="Controls">
      <Property name="Anchor">Bottom, Left</Property>
      <Property name="Location">198, 511</Property>
      <Property name="Margin">8, 8, 8, 8</Property>
      <Property name="Name">textboxNumberOfRows_QTY</Property>
      <Property name="ReadOnly">True</Property>
      <Property name="Size">164, 26</Property>
      <Property name="TabIndex">9</Property>
    </Object>
    <Object type="System.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="labelNumberOfRows" children="Controls">
      <Property name="Anchor">Bottom, Left</Property>
      <Property name="Location">20, 511</Property>
      <Property name="Margin">8, 0, 8, 0</Property>
      <Property name="Name">labelNumberOfRows</Property>
      <Property name="Size">278, 54</Property>
      <Property name="TabIndex">8</Property>
      <Property name="Text">Number of Rows</Property>
    </Object>
    <Object type="System.Windows.Forms.TextBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="textboxSearch" children="Controls">
      <Property name="Anchor">Top, Left, Right</Property>
      <Property name="Location">22, 23</Property>
      <Property name="Margin">8, 8, 8, 8</Property>
      <Property name="Name">textboxSearch</Property>
      <Property name="Size">1409, 26</Property>
      <Property name="TabIndex">0</Property>
      <Event name="KeyDown">textboxSearch_KeyDown</Event>
    </Object>
    <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="buttonSearch" children="Controls">
      <Property name="Anchor">Top, Right</Property>
      <Property name="Location">1443, 20</Property>
      <Property name="Margin">5, 5, 5, 5</Property>
      <Property name="Name">buttonSearch</Property>
      <Property name="Size">125, 35</Property>
      <Property name="TabIndex">1</Property>
      <Property name="Text">&amp;Search</Property>
      <Property name="UseVisualStyleBackColor">True</Property>
      <Event name="Click">buttonSearch_Click</Event>
    </Object>
    <Object type="System.Windows.Forms.DataGridView, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="datagridviewResults" children="Controls">
      <Property name="AllowUserToAddRows">False</Property>
      <Property name="AllowUserToDeleteRows">False</Property>
      <Property name="Anchor">Top, Bottom, Left, Right</Property>
      <Property name="Location">20, 65</Property>
      <Property name="Margin">5, 5, 5, 5</Property>
      <Property name="Name">datagridviewResults</Property>
      <Property name="Size">1550, 429</Property>
      <Property name="TabIndex">2</Property>
      <Event name="ColumnHeaderMouseClick">datagridviewResults_ColumnHeaderMouseClick</Event>
      <Event name="CurrentCellDirtyStateChanged">datagridviewResults_CurrentCellDirtyStateChanged</Event>
    </Object>
    <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="buttonExit" children="Controls">
      <Property name="Anchor">Bottom, Right</Property>
      <Property name="DialogResult">Cancel</Property>
      <Property name="Location">1445, 503</Property>
      <Property name="Margin">5, 5, 5, 5</Property>
      <Property name="Name">buttonExit</Property>
      <Property name="Size">125, 35</Property>
      <Property name="TabIndex">4</Property>
      <Property name="Text">E&amp;xit</Property>
      <Property name="UseVisualStyleBackColor">True</Property>
      <Event name="Click">buttonExit_Click</Event>
    </Object>
  </Object>
  <Code><![CDATA[

#region Control Helper Functions
function Load-DataGridView
{
	<#
	.SYNOPSIS
		This functions helps you load items into a DataGridView.

	.DESCRIPTION
		Use this function to dynamically load items into the DataGridView control.

	.PARAMETER  DataGridView
		The ComboBox control you want to add items to.

	.PARAMETER  Item
		The object or objects you wish to load into the ComboBox's items collection.
	
	.PARAMETER  DataMember
		Sets the name of the list or table in the data source for which the DataGridView is displaying data.

	#>
	Param (
		[ValidateNotNull()]
		[Parameter(Mandatory=$true)]
		[System.Windows.Forms.DataGridView]$DataGridView,
		[ValidateNotNull()]
		[Parameter(Mandatory=$true)]
		$Item,
	    [Parameter(Mandatory=$false)]
		[string]$DataMember
	)
	$DataGridView.SuspendLayout()
	$DataGridView.DataMember = $DataMember
	
	if ($Item -is [System.ComponentModel.IListSource]`
	-or $Item -is [System.ComponentModel.IBindingList] -or $Item -is [System.ComponentModel.IBindingListView] )
	{
		$DataGridView.DataSource = $Item
	}
	else
	{
		$array = New-Object System.Collections.ArrayList
		
		if ($Item -is [System.Collections.IList])
		{
			$array.AddRange($Item)
		}
		else
		{	
			$array.Add($Item)	
		}
		$DataGridView.DataSource = $array
	}
	
	$DataGridView.ResumeLayout()
}

function ConvertTo-DataTable
{
	<#
		.SYNOPSIS
			Converts objects into a DataTable.
	
		.DESCRIPTION
			Converts objects into a DataTable, which are used for DataBinding.
	
		.PARAMETER  InputObject
			The input to convert into a DataTable.
	
		.PARAMETER  Table
			The DataTable you wish to load the input into.
	
		.PARAMETER RetainColumns
			This switch tells the function to keep the DataTable's existing columns.
		
		.PARAMETER FilterWMIProperties
			This switch removes WMI properties that start with an underline.
	
		.EXAMPLE
			$DataTable = ConvertTo-DataTable -InputObject (Get-Process)
	#>
	[OutputType([System.Data.DataTable])]
	param(
	[ValidateNotNull()]
	$InputObject, 
	[ValidateNotNull()]
	[System.Data.DataTable]$Table,
	[switch]$RetainColumns,
	[switch]$FilterWMIProperties)
	
	if($Table -eq $null)
	{
		$Table = New-Object System.Data.DataTable
	}

	if($InputObject-is [System.Data.DataTable])
	{
		$Table = $InputObject
	}
	else
	{
		if(-not $RetainColumns -or $Table.Columns.Count -eq 0)
		{
			#Clear out the Table Contents
			$Table.Clear()

			if($InputObject -eq $null){ return } #Empty Data
			
			$object = $null
			#find the first non null value
			foreach($item in $InputObject)
			{
				if($item -ne $null)
				{
					$object = $item
					break	
				}
			}

			if($object -eq $null) { return } #All null then empty
			
			#Get all the properties in order to create the columns
			foreach ($prop in $object.PSObject.Get_Properties())
			{
				if(-not $FilterWMIProperties -or -not $prop.Name.StartsWith('__'))#filter out WMI properties
				{
					#Get the type from the Definition string
					$type = $null
					
					if($prop.Value -ne $null)
					{
						try{ $type = $prop.Value.GetType() } catch {}
					}

					if($type -ne $null) # -and [System.Type]::GetTypeCode($type) -ne 'Object')
					{
		      			[void]$table.Columns.Add($prop.Name, $type) 
					}
					else #Type info not found
					{ 
						[void]$table.Columns.Add($prop.Name) 	
					}
				}
		    }
			
			if($object -is [System.Data.DataRow])
			{
				foreach($item in $InputObject)
				{	
					$Table.Rows.Add($item)
				}
				return  @(,$Table)
			}
		}
		else
		{
			$Table.Rows.Clear()	
		}
		
		foreach($item in $InputObject)
		{		
			$row = $table.NewRow()
			
			if($item)
			{
				foreach ($prop in $item.PSObject.Get_Properties())
				{
					if($table.Columns.Contains($prop.Name))
					{
						$row.Item($prop.Name) = $prop.Value
					}
				}
			}
			[void]$table.Rows.Add($row)
		}
	}

	return @(,$Table)	
}
#endregion

#region Search Function
function SearchGrid()
{
	$RowIndex = 0
	$ColumnIndex = 0
	$seachString = $textboxSearch.Text
	
	if($seachString -eq "")
	{
		return
	}
	
	if($datagridviewResults.SelectedCells.Count -ne 0)
	{
		$startCell = $datagridviewResults.SelectedCells[0];
		$RowIndex = $startCell.RowIndex
		$ColumnIndex = $startCell.ColumnIndex + 1
	}
	
	$columnCount = $datagridviewResults.ColumnCount
	$rowCount = $datagridviewResults.RowCount
	for(;$RowIndex -lt $rowCount; $RowIndex++)
	{
		$Row = $datagridviewResults.Rows[$RowIndex]
		
		for(;$ColumnIndex -lt $columnCount; $ColumnIndex++)
		{
			$cell = $Row.Cells[$ColumnIndex]
			
			if($cell.Value -ne $null -and $cell.Value.ToString().IndexOf($seachString, [StringComparison]::OrdinalIgnoreCase) -ne -1)
			{
				$datagridviewResults.CurrentCell = $cell
				return
			}
		}
		
		$ColumnIndex = 0
	}
	
	$datagridviewResults.CurrentCell = $null
	[void][System.Windows.Forms.MessageBox]::Show("The search has reached the end of the grid.","String not Found")
	
}
#endregion

$formMain_Load={
	#TODO: Initialize Form Controls here
	
	<###############################################################
	#
	# Display non-Production environment notification
	#
	###############################################################>

	display_nonproduction_environment

	if ($Debug_SW -eq 1)
	{
		Write-Host "`$User_SW          = $User_SW"
	}

	[string]$SQLCommand_STR = "
select
	assignee_cde,
	issue_id,
	status_cde,
	queue_order_nbr,
	status_dte,
	location_cde,
	customer_cde,
	short_dsc,
	substring(long_dsc, 1, 150) as long_dsc,
	create_dte,
	due_dte,
	internal_ticket_nbr,
	vendor_ticket_nbr,
	comment_dsc
from
	issue
where
	('ALL' = '$User_SW' or assignee_cde = (select assignee_cde from assignee where user_nme = '$CurrentUser_NME'))
	and status_cde = 'Implementation'
order by
	assignee_cde,
	case
		when queue_order_nbr is null then 99
		else                              queue_order_nbr
	end,
	status_cde desc,
	due_dte
	;" # End of $SQLCommand_STR
	
	if ($Debug_SW -eq 1)
	{
		Write-Host $SQLCommand_STR
	}
	
	$Instance = "$DatabaseConnection_STR"
	$Database = "$Database_NME"
	$connStr  = "Server=$Instance;Database=$Database;Integrated Security=True"
	
	# Ideas for adding DataGridViewComboBoxColumn to DataGridView:
	#     http://www.devx.com/dotnet/Article/33748/0/page/2
	#     http://www.devx.com/dotnet/Article/33748/0/page/3
	
	$conn            = New-Object System.Data.SqlClient.SQLConnection($connStr)
	$cmd             = $conn.CreateCommand()
	$cmd.CommandText = $SQLCommand_STR
	$script:adapter  = New-Object System.Data.SqlClient.SqlDataAdapter($cmd)
	$dt              = New-Object System.Data.DataTable
	$script:adapter.Fill($dt)
	$datagridviewResults.DataSource = $dt
	$cmdBldr         = New-Object System.Data.SqlClient.SqlCommandBuilder($adapter)
	
#	# Retrieve data from database
#	
#	$dt = Get-Datatable $DatabaseConnection_STR $Database_NME $SQLCommand_STR
#	
#	# Put data into datagridview
#	
#	$datagridviewResults.DataSource = $dt.Tables[0]
#	
	# Set datagridview column attributes
	
	$datagridviewResults.Columns[0].HeaderText = "Assignee";
	$datagridviewResults.Columns[0].Width = 80;
	
	$datagridviewResults.Columns[1].HeaderText = "ID";
	$datagridviewResults.Columns[1].Width = 40;
	
	$datagridviewResults.Columns[2].HeaderText = "Status Code";
	$datagridviewResults.Columns[2].Width = 80;
	
	$datagridviewResults.Columns[3].HeaderText = "Order";
	$datagridviewResults.Columns[3].Width = 35;
	
	$datagridviewResults.Columns[4].HeaderText = "Status Date";
	$datagridviewResults.Columns[4].Width = 110;
	
	$datagridviewResults.Columns[5].HeaderText = "Location";
	$datagridviewResults.Columns[5].Width = 60;
	
	$datagridviewResults.Columns[6].HeaderText = "Customer";
	$datagridviewResults.Columns[6].Width = 90;
	
	$datagridviewResults.Columns[7].HeaderText = "Short Description";
	$datagridviewResults.Columns[7].Width = 120;
	
	$datagridviewResults.Columns[8].HeaderText = "Long Description";
	$datagridviewResults.Columns[8].Width = 120;
	
	$datagridviewResults.Columns[9].HeaderText = "Create Date";
	$datagridviewResults.Columns[9].Width = 110;
	
	$datagridviewResults.Columns[10].HeaderText = "Due Date";
	$datagridviewResults.Columns[10].Width = 110;
	
	$datagridviewResults.Columns[11].HeaderText = "Int. Ticket";
	$datagridviewResults.Columns[11].Width = 75;
	
	$datagridviewResults.Columns[12].HeaderText = "Vendor Ticket";
	$datagridviewResults.Columns[12].Width = 80;
	
	$datagridviewResults.Columns[13].HeaderText = "Comment";
	$datagridviewResults.Columns[13].Width = 120;
	
	# Display the row count
	
	$DataGridRowCount_QTY = $datagridviewResults.RowCount
	
	$textboxNumberOfRows_QTY.Text = "{0:N0}" -f $DataGridRowCount_QTY
}

$buttonSearch_Click={
	#TODO: Place custom script here
	SearchGrid
}

$buttonExit_Click={
	#TODO: Place custom script here

	if ($script:DGVhasChanged -and [System.Windows.Forms.MessageBox]::Show('Do you wish to save?', 'Data Changed', 'YesNo'))
	{
		try
		{
			$script:adapter.Update($datagridviewResults.DataSource)
		}
		catch
		{
			$ErrorMessage_STR = $error[0].ToString();
#			$ErrorPosition_STR = $error[0].InvocationInfo.PositionMessage.ToString();
			
			[System.Windows.Forms.MessageBox]::Show("$ErrorMessage_STR", "Database Write Was Unsuccessful", "OK")
			
			return
		}
	}
	
	$formMain.Close()
}

$datagridviewResults_ColumnHeaderMouseClick=[System.Windows.Forms.DataGridViewCellMouseEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.DataGridViewCellMouseEventArgs]
	if($datagridviewResults.DataSource -is [System.Data.DataTable])
	{
		$column = $datagridviewResults.Columns[$_.ColumnIndex]
		$direction = [System.ComponentModel.ListSortDirection]::Ascending
		
		if($column.HeaderCell.SortGlyphDirection -eq 'Descending')
		{
			$direction = [System.ComponentModel.ListSortDirection]::Descending
		}

		$datagridviewResults.Sort($datagridviewResults.Columns[$_.ColumnIndex], $direction)
	}
}

$textboxSearch_KeyDown=[System.Windows.Forms.KeyEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.KeyEventArgs]
	if($_.KeyCode -eq 'Enter' -and $buttonSearch.Enabled)
	{
		SearchGrid	
		$_.SuppressKeyPress = $true
	}
}

$datagridviewResults_CurrentCellDirtyStateChanged={
	#TODO: Place custom script here
	$script:DGVhasChanged = $true
}
]]></Code>
  <Mode>0</Mode>
  <Assemblies>
    <Assembly>mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</Assembly>
    <Assembly>System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
  </Assemblies>
</File>